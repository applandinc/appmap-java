/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    java

    // Apply the application plugin to add support for building a CLI application
    application
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    implementation("com.google.guava:guava:28.0-jre")
    implementation("info.picocli:picocli:4.0.4")
    implementation("org.yaml:snakeyaml:1.25")
    implementation("com.alibaba:fastjson:1.2.61")
    implementation("org.javassist:javassist:3.25.0-GA")
    implementation("org.reflections:reflections:0.9.11")
    implementation("javax.servlet:javax.servlet-api:4.0.1")

    annotationProcessor("info.picocli:picocli-codegen:4.0.4")

    testImplementation("junit:junit:4.12")
}

application {
    mainClassName = "com.appland.appmap.AppTest"
}

tasks.withType<Jar> {
    manifest {
        attributes["Main-Class"] = application.mainClassName
        attributes["PreMain-Class"] = "com.appland.appmap.App"
    }
}

tasks.register<Jar>("build-release") {
    from(sourceSets.main.get().output)

    dependsOn(configurations.runtimeClasspath)
    from({
        configurations.runtimeClasspath.get().filter { it.name.endsWith("jar") }.map { zipTree(it) }
    })
}

tasks.register("list") {
    dependsOn(configurations["compileClasspath"])
    doLast {
        println("classpath = ${configurations["compileClasspath"].map { file: File -> file.path }}")
    }
}